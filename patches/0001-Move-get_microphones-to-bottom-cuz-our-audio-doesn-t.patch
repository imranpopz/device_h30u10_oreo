From 01e0a73e2c266c0add5f674e5435ed56d7d50050 Mon Sep 17 00:00:00 2001
From: xcore995 <arman.p95@gmail.com>
Date: Sun, 31 May 2020 13:42:53 +0000
Subject: [PATCH] Move get_microphones to bottom cuz our audio doesn't support
 it

Change-Id: If32d6932ea38439fa570488becba241cb17ffffd
---
 include/hardware/audio.h | 38 +++++++++++++++++++-------------------
 1 file changed, 19 insertions(+), 19 deletions(-)

diff --git a/include/hardware/audio.h b/include/hardware/audio.h
index 10a8789a..c462a4c9 100644
--- a/include/hardware/audio.h
+++ b/include/hardware/audio.h
@@ -727,25 +727,6 @@ struct audio_hw_device {
     void (*close_input_stream)(struct audio_hw_device *dev,
                                struct audio_stream_in *stream_in);
 
-    /**
-     * Called by the framework to read available microphones characteristics.
-     *
-     * \param[in] dev the hw_device object.
-     * \param[out] mic_array Pointer to first element on array with microphone info
-     * \param[out] mic_count When called, this holds the value of the max number of elements
-     *                       allowed in the mic_array. The actual number of elements written
-     *                       is returned here.
-     *                       if mic_count is passed as zero, mic_array will not be populated,
-     *                       and mic_count will return the actual number of microphones in the
-     *                       system.
-     *
-     * \return 0 if the microphone array is successfully filled.
-     *         -ENOSYS if there is an error filling the data
-     */
-    int (*get_microphones)(const struct audio_hw_device *dev,
-                           struct audio_microphone_characteristic_t *mic_array,
-                           size_t *mic_count);
-
     /** This method dumps the state of the audio hardware */
     int (*dump)(const struct audio_hw_device *dev, int fd);
 
@@ -795,6 +776,25 @@ struct audio_hw_device {
     int (*set_audio_port_config)(struct audio_hw_device *dev,
                          const struct audio_port_config *config);
 
+    /**
+     * Called by the framework to read available microphones characteristics.
+     *
+     * \param[in] dev the hw_device object.
+     * \param[out] mic_array Pointer to first element on array with microphone info
+     * \param[out] mic_count When called, this holds the value of the max number of elements
+     *                       allowed in the mic_array. The actual number of elements written
+     *                       is returned here.
+     *                       if mic_count is passed as zero, mic_array will not be populated,
+     *                       and mic_count will return the actual number of microphones in the
+     *                       system.
+     *
+     * \return 0 if the microphone array is successfully filled.
+     *         -ENOSYS if there is an error filling the data
+     */
+    int (*get_microphones)(const struct audio_hw_device *dev,
+                           struct audio_microphone_characteristic_t *mic_array,
+                           size_t *mic_count);
+
 };
 typedef struct audio_hw_device audio_hw_device_t;
 
-- 
2.25.1

